@model FisioterapiaUlatskawa.Models.UsuariosViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal ">
    <h4>Usuarios</h4>

    <div>



        <a href="@Url.Action("Index", "Usuarios")" class="btn btn-danger btn-full ">
            <i class="fa fa-arrow-alt-circle-left"></i> Atrás
        </a>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.cedula)

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.contrasenna, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.contrasenna, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.contrasenna, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="form-group">
            @Html.LabelFor(model => model.idTipoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idTipoUsuario, Model.ListaTipoUsuario, "-Seleccionar-", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idTipoUsuario, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-success" />
        </div>
    </div>
</div>
}




<script src="~/Scripts/Alerts.js"></script>

<script type="text/javascript">



    $(document).ready(function () {


        var data = '@TempData["ErrorMessage"]';

        if (data === "") {
            console.log("Empty string")
        } else {
            ErrorShowMessage(data);
        }

        var message = '@TempData["Message"]';

        console.log(message);

        if (message === "" || message == "") {
            console.log("Empty string")
        } else {
            SuccessShowMessage(message);
        }
    });


</script>
